# .Synopsis
#     Downloading and updating Microsoft Service Tags IP ranges
#
# .NOTES
#     Author     : Roman Rabodzei
#     Version    : 1.0.240708
#
#             _
#         .__(.)<  (MEOW)
#          \___)
#  ~~~~~~~~~~~~~~~~~~~~~~~~

name: Service Tags Update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  serviceTagsUpdate:
    runs-on: windows-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Downloading files from Microsoft for Public and Government Service Tags
    - name: Downloading files from Microsoft
      run: |
        Write-Host "Downloading Service Tags..."
        $publicRawHtml = Invoke-RestMethod -Uri 'https://www.microsoft.com/en-us/download/confirmation.aspx?id=56519' -UseBasicParsing
        Invoke-WebRequest ([Regex]::Match($publicRawHtml, 'https://download.microsoft.com[^"]*').Value) -OutFile .\ServiceTags_Public.json

        $govRawHtml = Invoke-RestMethod -Uri 'https://www.microsoft.com/en-us/download/confirmation.aspx?id=57063' -UseBasicParsing
        Invoke-WebRequest ([Regex]::Match($govRawHtml, 'https://download.microsoft.com[^"]*').Value) -OutFile .\ServiceTags_Gov.json
        Write-Host "Service Tags downloaded."
      shell: pwsh

    # Checking/Committing changes to the repository
    - name: Checking/Committing changes
      run: |
        $status = git diff
        if ($null -ne $status) {
          Write-Host "The following changes have been made to the files...`n"
          git diff

          Write-Host "Committing and pushing changes..."
          git config --global user.name  "Roman Rabodzei"
          git config --global user.email "Roman.Rabodzei@icloud.com"
          git add .
          git commit -m "Service Tags Update $(Get-Date -Format yyyMMddHHmm)"
          git -c http.extraheader="AUTHORIZATION: bearer ${GITHUB_TOKEN}" push
        }
        else {
          Write-host "There are no changes."
        }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: pwsh